{"version":3,"file":"static/js/170.cd0190f8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","Pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactFormWrapper\":\"ContactForm_contactFormWrapper__dlYpP\",\"contactFormTitle\":\"ContactForm_contactFormTitle__uQN+e\",\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactFormInput\":\"ContactForm_contactFormInput__eC5HJ\",\"contactFormButton\":\"ContactForm_contactFormButton__gvoPv\"};","import { useState } from 'react';\nimport { addContacts } from '../../Redux/actions';\nimport { useDispatch } from 'react-redux';\nimport css from './ContactForm.module.css';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContacts({ name: name, number: number }));\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    if (e.target.name === 'name') setName(e.target.value);\n    else if (e.target.name === 'number') setNumber(e.target.value);\n  };\n  return (\n    <div className={css.contactFormWrapper}>\n      <h3 className={css.contactFormTitle}>Add Contact</h3>\n      <form className={css.contactForm} onSubmit={handleSubmit}>\n        <label className={css.contactLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            autocomplete=\"off\"\n            className={css.contactFormInput}\n            pattern=\"^[a-zA-Zа-яА-Я]+((['\\- ][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={css.contactLabel}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            autocomplete=\"off\"\n            className={css.contactFormInput}\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </label>\n        <button className={css.contactFormButton} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListWrapper\":\"ContactList_contactListWrapper__QKp7O\",\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport css from './ContactList.module.css';\nimport { deleteContacts, fetchContacts } from 'Redux/actions';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filters);\n\n  const handleDelete = id => {\n    dispatch(deleteContacts(id));\n  };\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.contactListWrapper}>\n      <ul className={css.contactList}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              className={css.contactListBtn}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterWrapper\":\"Filter_filterWrapper__ohvAm\",\"filterTitle\":\"Filter_filterTitle__5SDqd\",\"filterSubTitle\":\"Filter_filterSubTitle__SusXd\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch } from 'react-redux';\nimport { setStatusFilter } from 'Redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const handleChangeFilter = e =>\n    dispatch(setStatusFilter(e.target.value.toLowerCase()));\n\n  return (\n    <div className={css.filterWrapper}>\n      <h2 className={css.filterTitle}>Your contacts</h2>\n      <p className={css.filterSubTitle}>Find contacts by name :</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        className={css.filterInput}\n        autocomplete='off'\n        placeholder=\"search contacts...\"\n        onChange={handleChangeFilter}\n      />\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'Redux/actions';\nimport { useEffect } from 'react';\n\n\nexport const ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error && <p>Loading, Please Wait...</p>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;"],"names":["ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","target","value","className","css","onSubmit","preventDefault","addContacts","type","autocomplete","pattern","title","required","onChange","ContactList","contacts","useSelector","state","items","filter","filters","filteredContacts","contact","toLowerCase","includes","useEffect","fetchContacts","map","onClick","id","deleteContacts","Filter","placeholder","setStatusFilter","ContactsPage","isLoading","error"],"sourceRoot":""}